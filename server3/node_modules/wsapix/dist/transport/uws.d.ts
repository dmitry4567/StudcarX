import type { WebSocket, TemplatedApp } from 'uWebSockets.js';
import { Client, Transport } from './transport';
export interface WebsocketOptions {
    maxPayloadLength?: number;
    idleTimeout?: number;
    compression?: number;
    maxBackpressure?: number;
}
export declare class uWebSocketClient extends Client {
    ws: WebSocket;
    constructor(ws: WebSocket);
    _send(data: any, cb?: (error?: Error) => void): Promise<void>;
    _terminate(code?: number, data?: string): void;
}
export declare class uWebsocketTransport extends Transport {
    app: TemplatedApp;
    clients: WeakMap<WebSocket, uWebSocketClient>;
    constructor(options: WebsocketOptions & {
        server: TemplatedApp;
    });
    close(cb?: (error?: Error) => void): Promise<void>;
}
