"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transport = exports.Client = exports.ClientStatus = void 0;
var ClientStatus;
(function (ClientStatus) {
    ClientStatus[ClientStatus["connecting"] = 0] = "connecting";
    ClientStatus[ClientStatus["connected"] = 1] = "connected";
    ClientStatus[ClientStatus["disconnecting"] = 2] = "disconnecting";
    ClientStatus[ClientStatus["disconnected"] = 3] = "disconnected";
})(ClientStatus = exports.ClientStatus || (exports.ClientStatus = {}));
const noop = () => { };
/**
 * Abstract client class
 */
class Client {
    constructor() {
        /**
         * connection headers
         */
        this.headers = {};
        /**
         * client connection status
         */
        this.status = ClientStatus.connecting;
    }
    /**
     * Send message to client
     * @param data - payload
     * @param cb - callback on error/complete
     * @returns promise
     */
    send(data, cb) {
        return this._send(data, cb);
    }
    /**
     * Terminate client connection
     * @param code - termination code
     * @param data - termination reason
     */
    terminate(code, data) {
        this.status = ClientStatus.disconnecting;
        this._terminate(code, data);
    }
}
exports.Client = Client;
/**
 * Abstarct class for Transport
 */
class Transport {
    constructor() {
        this.handlers = {
            connection: noop,
            disconnect: noop,
            message: noop,
            error: noop,
        };
    }
    /**
     * Register handler for client connection event
     * @param cb - connection handler
     */
    onConnection(cb) {
        this.handlers.connection = cb;
    }
    /**
     * Register handler for client message event
     * @param cb - message handler
     */
    onMessage(cb) {
        this.handlers.message = cb;
    }
    /**
     * Register handler for client disconnection event
     * @param cb - disconnection handler
     */
    onDisconnect(cb) {
        this.handlers.disconnect = cb;
    }
    /**
     * Register handler for error event
     * @param cb - error handler
     */
    onError(cb) {
        this.handlers.error = cb;
    }
}
exports.Transport = Transport;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RyYW5zcG9ydC90cmFuc3BvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBWSxZQUtYO0FBTEQsV0FBWSxZQUFZO0lBQ3RCLDJEQUFjLENBQUE7SUFDZCx5REFBYSxDQUFBO0lBQ2IsaUVBQWlCLENBQUE7SUFDakIsK0RBQWdCLENBQUE7QUFDbEIsQ0FBQyxFQUxXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBS3ZCO0FBRUQsTUFBTSxJQUFJLEdBQUcsR0FBRyxFQUFFLEdBQVEsQ0FBQyxDQUFBO0FBRTNCOztHQUVHO0FBQ0gsTUFBc0IsTUFBTTtJQUE1QjtRQVNFOztXQUVHO1FBQ0ksWUFBTyxHQUFxRCxFQUFFLENBQUE7UUFFckU7O1dBRUc7UUFDSSxXQUFNLEdBQWlCLFlBQVksQ0FBQyxVQUFVLENBQUE7SUF3QnZELENBQUM7SUF0QkM7Ozs7O09BS0c7SUFDSSxJQUFJLENBQUMsSUFBUyxFQUFFLEVBQTRCO1FBQ2pELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDN0IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxTQUFTLENBQUMsSUFBYSxFQUFFLElBQVU7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxZQUFZLENBQUMsYUFBYSxDQUFBO1FBQ3hDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQzdCLENBQUM7Q0FJRjtBQXpDRCx3QkF5Q0M7QUFFRDs7R0FFRztBQUNILE1BQXNCLFNBQVM7SUFBL0I7UUFDWSxhQUFRLEdBQVE7WUFDeEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsT0FBTyxFQUFFLElBQUk7WUFDYixLQUFLLEVBQUUsSUFBSTtTQUNaLENBQUE7SUF3Q0gsQ0FBQztJQXRDQzs7O09BR0c7SUFDSSxZQUFZLENBQUMsRUFBNEI7UUFDOUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFBO0lBQy9CLENBQUM7SUFFRDs7O09BR0c7SUFDSSxTQUFTLENBQUMsRUFBdUM7UUFDdEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFBO0lBQzVCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxZQUFZLENBQUMsRUFBdUQ7UUFDekUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFBO0lBQy9CLENBQUM7SUFFRDs7O09BR0c7SUFDSSxPQUFPLENBQUMsRUFBMEI7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFBO0lBQzFCLENBQUM7Q0FRRjtBQTlDRCw4QkE4Q0MifQ==